version: '3'

services:

  db-postgres:
    image: postgres
    container_name: db-postgres
    environment:
      - POSTGRES_DB=user_service
      - POSTGRES_USER=user_service
      - POSTGRES_PASSWORD=user_service
    ports:
      - "5432:5432"
#    volumes:
#      - ./src/resources/db:/docker-entrypoint-initdb.d

  db-mongo:
    image: mongo:latest
    container_name: db-mongo
    ports:
      - "27017:27017"

  gateway-service:
    container_name: gateway-service
    build:
      context: .
      dockerfile: dockerfile-gateway
    environment:
      - LOKI_HOST=loki
      - TEMPO_HOST=tempo
    ports:
      - '8080:8080'

  user-service:
    depends_on:
      - db-postgres
    container_name: user-service
    build:
      context: .
      dockerfile: dockerfile-user
    environment:
      - LOKI_HOST=loki
      - TEMPO_HOST=tempo
    ports:
      - '8081:8081'


  scrapper-service:
    depends_on:
      - db-mongo
    container_name: scrapper-service
    build:
      context: .
      dockerfile: dockerfile-scrapper
    environment:
      - LOKI_HOST=loki
      - TEMPO_HOST=tempo
    ports:
      - '8082:8082'

  tempo:
    image: grafana/tempo
    container_name: tempo
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./docker/tempo/tempo-local.yml:/etc/tempo.yaml
      - ./docker/tempo/tempo-data:/tmp/tempo
    ports:
      - "14268"  # jaeger ingest
      - "9411:9411" # zipkin

  loki:
    image: grafana/loki
    container_name: loki
    command: [ "-config.file=/etc/loki/local-config.yaml" ]
    ports:
      - "3100:3100"
    environment:
      - JAEGER_AGENT_HOST=tempo
      - JAEGER_ENDPOINT=http://tempo:14268/api/traces
      - JAEGER_SAMPLER_TYPE=const
      - JAEGER_SAMPLER_PARAM=1

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    extra_hosts: [ 'host.docker.internal:host-gateway' ]
    command:
      - --enable-feature=exemplar-storage
      - --config.file=/etc/prometheus/prometheus.yml
    depends_on:
      - loki
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana
    container_name: grafana
    volumes:
      - ./docker/grafana/datasources:/etc/grafana/provisioning/datasources
      - ./docker/grafana/dashboards:/etc/grafana/dashboards
      - ./docker/grafana/dashboards.yaml:/etc/grafana/provisioning/dashboards/dashboards.yaml
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_AUTH_BASIC_ENABLED="false"
      - GF_AUTH_DISABLE_LOGIN_FORM="true"
      - GF_AUTH_DISABLE_SIGNOUT_MENU="true"
      - GF_AUTH_PROXY_ENABLED="true"
      - GF_USERS_ALLOW_SIGN_UP=false
    depends_on:
      - loki
      - prometheus
    ports:
      - "3000:3000"
